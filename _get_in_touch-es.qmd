# ¬°Ponte en contacto!

Nos encantar√≠a construir una comunidad en torno a FOSSILPOL y hay varias maneras de ponerse en contacto y crecer juntos.

## Cont√°ctanos

Hemos creado [GitHub Discussions](https://github.com/HOPE-UIB-BIO/FOSSILPOL-issues/discussions) como el centro principal de comunicaci√≥n. ¬øTienes una pregunta? ¬øHas pensado en una nueva funcionalidad genial? Escr√≠benos un mensaje. Esperamos que la p√°gina de **Discusiones** sirva como l√≠nea de comunicaci√≥n tanto para los desarrolladores como entre los diferentes usuarios.

## "¬°No funciona!"

Ning√∫n software est√° libre de problemas, y si encuentras un error desagradable utilizando este flujo de trabajo, utiliza la [p√°gina de Issues](https://github.com/HOPE-UIB-BIO/FOSSILPOL-issues/issues) para reportarlo.

Considera los siguientes pasos antes y al abrir un nuevo Issue:

1. ¬øT√∫ o alguien m√°s ya lo ha preguntado en [GitHub Discussions](https://github.com/HOPE-UIB-BIO/FOSSILPOL-issues/discussions)? ¬°La secci√≥n "Q&A" es perfecta para eso!

2. ¬øHas comprobado que problemas similares ya hayan sido reportados? El rastreador de Issues tiene una funci√≥n de filtro para buscar palabras clave en los Issues abiertos. Puedes reducir la b√∫squeda usando `labels`üè∑Ô∏è como filtros. Consulta [Labels](https://docs.github.com/en/issues/using-labels-and-milestones-to-track-work/managing-labels) para m√°s informaci√≥n. Como regla general, no asignamos issues a nadie.

Para abrir un nuevo Issue:

1. Haz clic en el bot√≥n verde **New issue** en la esquina superior derecha y selecciona **Bug report**.

2. Describe tu problema con el mayor detalle posible. El issue debe indicar cu√°l es el problema, cu√°l deber√≠a ser el comportamiento esperado y, tal vez, sugerir una soluci√≥n. Ten en cuenta que tambi√©n puedes adjuntar archivos (por ejemplo, datos de ejemplo, c√≥digo en R, etc.) o im√°genes al issue.

3. Selecciona una `label`üè∑Ô∏è adecuada del men√∫ desplegable llamado **Labels**.

4. Haz clic en el bot√≥n verde **Submit new issue** y espera una respuesta.

## "¬øPodemos a√±adir esto?"

Tambi√©n usamos la [p√°gina de Issues](https://github.com/HOPE-UIB-BIO/FOSSILPOL-issues/issues) para solicitudes serias de nuevas funcionalidades. Si alguna discusi√≥n en el portal [GitHub Discussions](https://github.com/HOPE-UIB-BIO/FOSSILPOL-issues/discussions) lleva a una funci√≥n bien definida que te gustar√≠a implementar, puedes enviarla como *feature request*:

1. Ve a la [p√°gina de Issues](https://github.com/HOPE-UIB-BIO/FOSSILPOL-issues/issues)

2. Haz clic en el bot√≥n verde **New issue** en la esquina superior derecha y selecciona **Feature request**.

3. Describe la funcionalidad con el mayor detalle posible. ¬øCu√°l es el comportamiento esperado? ¬øQu√© paquetes deber√≠amos usar? Ten en cuenta que tambi√©n puedes adjuntar archivos o im√°genes al Issue.

4. Selecciona una `label`üè∑Ô∏è adecuada del men√∫ desplegable llamado **Labels**.

5. Haz clic en el bot√≥n verde **Submit new issue** y espera una respuesta.

## Actualizaciones futuras del proyecto

El proyecto FOSSILPOL est√° concebido como un software que recibir√° actualizaciones para mejorar continuamente.

Somos conscientes de las funciones y caracter√≠sticas que nos gustar√≠a implementar en el futuro.

Consulta las actualizaciones futuras previstas en **[project future updates](https://github.com/orgs/HOPE-UIB-BIO/projects/3)**. Las tres etapas de la solicitud son:

* "next version" ‚Äì una funci√≥n que se implementar√° en la pr√≥xima versi√≥n de FOSSILPOL

* "future" ‚Äì una funci√≥n que probablemente se implementar√° en una de las pr√≥ximas versiones de FOSSILPOL

* "in consideration" ‚Äì una funci√≥n que podr√≠a implementarse, pero no es prioritaria

Si hay alguna funcionalidad que te gustar√≠a implementar, primero consulta el [Issue Tracker](https://github.com/HOPE-UIB-BIO/FOSSILPOL-issues/issues) y mira si alguien ya la ha sugerido y ***dale un voto positivo*** si ya est√° all√≠. Antes de cada lanzamiento de versi√≥n, implementaremos la funcionalidad m√°s votada.

Nuestro objetivo es actualizar la lista regularmente.

## Contribuye

El proyecto FOSSILPOL est√° concebido como un software que recibir√° actualizaciones para mejorar continuamente.

Agradecemos la ayuda :sparkling_heart: y gracias solo por considerar contribuir a FOSSILPOL.

Para asegurarnos de mantener la m√°s alta calidad de c√≥digo, debemos cumplir algunas directrices estrictas. Por favor, lee este documento para ayudarte a comenzar.

Si deseas reportar un bug, sugerir mejoras o solicitar una nueva
funcionalidad, dir√≠gete a la [secci√≥n de Issues](#it-does-not-work).

### Git + GitHub

Usamos el sistema de control de versiones [Git](https://git-scm.com/) para gestionar los desarrollos en el repositorio alojado en [GitHub](https://github.com). Si eres nuevo en Git o GitHub, por favor revisa el
[GitHub Bootcamp](https://help.github.com/categories/bootcamp/) para ponerte al d√≠a.

Si ya conoces Git y GitHub, por favor revisa
[Submitting Pull Requests](#submitting-pull-requests).

### Directrices de estilo de codificaci√≥n

Aunque tenemos nuestro propio estilo de codificaci√≥n y no seguimos ning√∫n est√°ndar disponible en la web, s√≠ mantenemos cierta uniformidad.

Si olvidamos mencionar alg√∫n caso particular, siempre debes seguir este procedimiento:

* Mira c√≥mo se hace en el c√≥digo fuente.
* Consulta qu√© dice la convenci√≥n de [Advanced R by Hadley Wickham](http://adv-r.had.co.nz/Style.html) y elige algo que se asemeje al c√≥digo base.
* Si todo lo dem√°s falla, pregunta en [GitHub Discussions](https://github.com/HOPE-UIB-BIO/FOSSILPOL-issues/discussions)

### Env√≠o de Pull Requests

Todos los cambios a FOSSILPOL deben ser en forma de **pull request** (tambi√©n conocidos como PR). Si no est√°s familiarizado con los pull requests, por favor lee [esto](https://git-scm.com/book/en/v2/GitHub-Contributing-to-a-Project>).

Este es el proceso recomendado:

1. Haz un fork del repositorio para que puedas hacer tus cambios sin afectar el proyecto original hasta que est√©s listo para fusionarlos. Consulta la [Gu√≠a para forking](https://docs.github.com/en/get-started/quickstart/fork-a-repo#fork-an-example-repository)

2. Trabaja sobre la rama (nombrada seg√∫n la pr√≥xima versi√≥n, si existe).

3. Haz commit de tus actualizaciones cuando est√©s satisfecho con ellas. Consulta la [gu√≠a de contribuci√≥n](https://github.com/atom/atom/blob/master/CONTRIBUTING.md#git-commit-messages) para los mensajes de commit.

4. Cuando termines los cambios, crea un PR
   * Haz clic en "Ready for review" para que podamos revisar tu PR. Esta plantilla ayuda a los revisores a entender tus cambios, as√≠ como el prop√≥sito de tu pull request.
   * No olvides [vincular el PR al Issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue) si est√°s resolviendo uno.
   * Habilita la casilla para [permitir ediciones por parte de los mantenedores](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/allowing-changes-to-a-pull-request-branch-created-from-a-fork) para que la rama pueda ser actualizada para una fusi√≥n. Una vez que env√≠es tu PR, un miembro del equipo HOPE revisar√° tu propuesta. Podemos hacer preguntas o solicitar informaci√≥n adicional.
   * Es posible que pidamos cambios antes de poder fusionar el PR, ya sea usando cambios sugeridos o comentarios en el pull request. Puedes aplicar los cambios sugeridos directamente desde la interfaz de usuario (UI). Puedes hacer cualquier otro cambio en tu fork, y luego hacer commit a tu rama.
   * A medida que actualices tu PR y apliques cambios, marca cada conversaci√≥n como [resuelta](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#resolving-conversations)
   * Si tienes problemas de fusi√≥n, revisa este [tutorial de git](https://lab.github.com/githubtraining/managing-merge-conflicts) para ayudarte a resolver conflictos de fusi√≥n y otros problemas.

Antes de enviar un pull request, aseg√∫rate de seguir todas las pautas
a continuaci√≥n mientras trabajas en tus cambios:

* Cada pull request debe intentar lograr una sola tarea general.
* Todo el trabajo debe realizarse en una rama con un nombre descriptivo relacionado con la tarea general (por ejemplo, `fix_bug_x` o `add_feature_y`). Cada commit debe lograr una peque√±a subtarea y debe ser explicable en una o dos frases.
* Cada commit debe tener un mensaje descriptivo.
* Debes asegurarte de que tu c√≥digo pase todas las pruebas antes de hacer commit.
